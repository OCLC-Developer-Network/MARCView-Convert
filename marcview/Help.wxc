Save Format v1.3
@begin ClassFile "yHelp"
 Exported 0;

@begin-code BaseClassList

public WObject

@end-code;

 @begin UserFunction "yHelp()"
  GencodeSrcLine 16;
  FunctionName "yHelp::yHelp()";
 @end;

 @begin UserFunction "Prototype for yHelp()"
  Private 1;
  GencodeSrcLine 39;
  FunctionName "yHelp::Prototype for yHelp()";
 @end;

 @begin UserFunction "~yHelp()"
  GencodeSrcLine 20;
  FunctionName "yHelp::~yHelp()";
 @end;

 @begin UserFunction "Prototype for ~yHelp()"
  Private 1;
  GencodeSrcLine 41;
  FunctionName "yHelp::Prototype for ~yHelp()";
 @end;

 @begin UserFunction "ShowHelp (WString anchor=\"\")"
  GencodeSrcLine 24;
  FunctionName "yHelp::ShowHelp (WString anchor=\"\")";
 @end;

 @begin UserFunction "Prototype for ShowHelp (WString anchor=\"\")"
  Private 1;
  GencodeSrcLine 43;
  FunctionName "yHelp::Prototype for ShowHelp (WString anchor=\"\")";
 @end;

 @begin UserFunction "SetFilename (WString filename)"
  GencodeSrcLine 64;
  FunctionName "yHelp::SetFilename (WString filename)";
 @end;

 @begin UserFunction "Prototype for SetFilename (WString filename)"
  Private 1;
  GencodeSrcLine 45;
  FunctionName "yHelp::Prototype for SetFilename (WString filename)";
 @end;

 @begin HPPPrefixBlock
@begin-code HPPPrefix

/*
Copyright 1992-2009 Systems Planning (www.systemsplanning.com)

Licensed under the Apache License, Version 2.0 (the "License"); 
you may not use this file except in compliance with the License. 
You may obtain a copy of the License at 

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software 
distributed under the License is distributed on an "AS IS" BASIS, 
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
See the License for the specific language governing permissions and 
limitations under the License.
*/

// Declarations added here will be included at the top of the .HPP file
#include <process.h>	//011103 for html link

@end-code;
  GencodeSrcLine 11;
 @end;

 @begin CPPPrefixBlock
@begin-code CPPPrefix

// Code added here will be included at the top of the .CPP file
		static WString TheFilepath;

//  Include definitions for resources.
#include "WRes.h"

@end-code;
  GencodeSrcLine 11;
 @end;

 @begin ClassContentsBlock
@begin-code ClassContents

    public:
        // add your public instance data here
    private:
        // add your private instance data here
    protected:
        // add your protected instance data here

@end-code;
  GencodeSrcLine 33;
 @end;

@begin-code GeneratedClassContents


@end-code;

@begin-code Code "yHelp::yHelp()"

@@CLASSNAME@::@CLASSNAME@()
{
    
}

@end-code;

@begin-code Code "yHelp::Prototype for yHelp()"

    public:
        @@CLASSNAME@();

@end-code;

@begin-code Code "yHelp::~yHelp()"

@@CLASSNAME@::~@CLASSNAME@()
{
    
}

@end-code;

@begin-code Code "yHelp::Prototype for ~yHelp()"

    public:
        ~@CLASSNAME@();

@end-code;

@begin-code Code "yHelp::ShowHelp (WString anchor=\"\")"

void @CLASSNAME@::ShowHelp (WString anchor)
{
    	//011103 code from Absolute Power site
	WString appExt = ".exe";
	WULong strEnd;
	WRegistryKey  regKey;
	WString fileType, appPath, filePath = TheFilepath;
	
	if (!anchor.GetEmpty ())
	{
		filePath.Concat ("#");
		filePath.Concat (anchor.GetText ());
	}
	
	int process_id;
	WBool  opened;
	opened = regKey.Open( WRKeyClassesRoot, ".html" );
	if( opened ) {
		fileType = regKey.GetStringValue( NULL );
		regKey.Close();
		fileType += "\\shell\\open\\command";
		opened = regKey.Open( WRKeyClassesRoot, fileType );
		if( opened ) {
			appPath = regKey.GetStringValue( NULL );
			WString tempLeft = appPath.Left( 1 );
			if( tempLeft == "\"" )
				appPath.Chop( 1L );
			WString tempRight = appPath.Right( 4 );
			if( (tempRight != ".EXE") || (tempRight != ".exe") ) {
				strEnd = appPath.Position( appExt, 0, true );
				strEnd += 4;
				appPath = appPath.Substring( 0, strEnd-0 );
			}    
			process_id = spawnl( P_NOWAIT, appPath, "child",
								 filePath.GetText(), NULL );
			regKey.Close();
		}
	}    

}

@end-code;

@begin-code Code "yHelp::Prototype for ShowHelp (WString anchor=\"\")"

    public:
        static void ShowHelp (WString anchor="");

@end-code;

@begin-code Code "yHelp::SetFilename (WString filename)"

void @CLASSNAME@::SetFilename (WString filename)
{
    TheFilepath.Sprintf
			#ifdef _DEBUG
			("http://localhost/marc/%s",
			#else
			("http://www.systemsplanning.com/marc/%s",
			#endif
			filename.GetText ());
}

@end-code;

@begin-code Code "yHelp::Prototype for SetFilename (WString filename)"

    public:
        static void SetFilename (WString filename);

@end-code;
@end;
